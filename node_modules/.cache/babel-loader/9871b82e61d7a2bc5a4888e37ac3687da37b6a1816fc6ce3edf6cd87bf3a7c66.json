{"ast":null,"code":"import { Colors } from \"../Colors\";\nimport { Figure, FigureNames } from \"../Figure\";\nimport black_bishop from '../icons/black_bishop.png';\nimport white_bishop from '../icons/white_bishop.png';\nexport class Bishop extends Figure {\n  constructor(color, cell) {\n    super(color, cell);\n    this.name = FigureNames.BISHOP;\n    this.figureImg = this.color === Colors.WHITE ? white_bishop : black_bishop;\n  }\n  canMove(cell) {\n    //Общее правило для всех фигур\n    if (!super.canMove(cell)) {\n      return false;\n    }\n    let onFirstDiagonal = Math.abs(this.cell.id - cell.id) % 9 === 0 ? true : false;\n    let onSecondDiagonal = Math.abs(this.cell.id + cell.id) % 7 === 0 ? true : false;\n\n    /*\n    if (onDiagonal) {\n        for (let i = cell.id + 9; i < this.cell.id; i+=9) {\n            if (!cell.board.getCellFromID(i).figure) return true\n        }\n    }\n    */\n    return onSecondDiagonal;\n  }\n}","map":{"version":3,"names":["Colors","Figure","FigureNames","black_bishop","white_bishop","Bishop","constructor","color","cell","name","BISHOP","figureImg","WHITE","canMove","onFirstDiagonal","Math","abs","id","onSecondDiagonal"],"sources":["/home/arthas/github/custom-chess/src/model/figures/Bishop.ts"],"sourcesContent":["import { Cell } from \"../Cell\";\nimport { Colors } from \"../Colors\";\nimport { Figure, FigureNames } from \"../Figure\";\n\nimport black_bishop from '../icons/black_bishop.png';\nimport white_bishop from '../icons/white_bishop.png';\n\nexport class Bishop extends Figure {\n    \n    constructor(color: Colors, cell: Cell) {\n        super(color, cell)\n        this.name = FigureNames.BISHOP\n        this.figureImg = this.color === Colors.WHITE ? white_bishop : black_bishop\n    }\n\n    canMove(cell: Cell): boolean {\n        //Общее правило для всех фигур\n        if (!super.canMove(cell)) {\n            return false\n        }\n  \n        let onFirstDiagonal = (Math.abs((this.cell.id - cell.id)) % 9 === 0) ? true : false\n        let onSecondDiagonal = (Math.abs((this.cell.id + cell.id)) % 7 === 0) ? true : false\n \n        /*\n        if (onDiagonal) {\n            for (let i = cell.id + 9; i < this.cell.id; i+=9) {\n                if (!cell.board.getCellFromID(i).figure) return true\n            }\n        }\n        */\n        return onSecondDiagonal\n    }\n    \n}"],"mappings":"AACA,SAASA,MAAM,QAAQ,WAAW;AAClC,SAASC,MAAM,EAAEC,WAAW,QAAQ,WAAW;AAE/C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,OAAO,MAAMC,MAAM,SAASJ,MAAM,CAAC;EAE/BK,WAAWA,CAACC,KAAa,EAAEC,IAAU,EAAE;IACnC,KAAK,CAACD,KAAK,EAAEC,IAAI,CAAC;IAClB,IAAI,CAACC,IAAI,GAAGP,WAAW,CAACQ,MAAM;IAC9B,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,KAAK,KAAKP,MAAM,CAACY,KAAK,GAAGR,YAAY,GAAGD,YAAY;EAC9E;EAEAU,OAAOA,CAACL,IAAU,EAAW;IACzB;IACA,IAAI,CAAC,KAAK,CAACK,OAAO,CAACL,IAAI,CAAC,EAAE;MACtB,OAAO,KAAK;IAChB;IAEA,IAAIM,eAAe,GAAIC,IAAI,CAACC,GAAG,CAAE,IAAI,CAACR,IAAI,CAACS,EAAE,GAAGT,IAAI,CAACS,EAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAI,IAAI,GAAG,KAAK;IACnF,IAAIC,gBAAgB,GAAIH,IAAI,CAACC,GAAG,CAAE,IAAI,CAACR,IAAI,CAACS,EAAE,GAAGT,IAAI,CAACS,EAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAI,IAAI,GAAG,KAAK;;IAEpF;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,OAAOC,gBAAgB;EAC3B;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}